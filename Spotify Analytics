# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#First I wanted to see if there were any artists who appeared on the list more than once.
SELECT artist_name,COUNT(artist_name)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING COUNT(artist_name) >2;

#Then I wanted to find the MAX, MIN, and AVG duration.
SELECT MAX(duration_ms), MIN(duration_ms), AVG(duration_ms)
FROM BIT_DB.Spotifydata;

#Then I wanted to see the artist name and track name that had a popularity of 90 or higher.
SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
WHERE popularity >90
ORDER BY popularity DESC;

#Next I wanted to see the artist name and track name that had a popularity of 70 or lower.
SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
WHERE popularity <70
ORDER BY popularity;
